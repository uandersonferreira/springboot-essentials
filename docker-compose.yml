version: '3.8'
x-database-variables: &database-variables
  SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_anime_container:5432/db_anime
  SPRING_DATASOURCE_USERNAME: postgres
  SPRING_DATASOURCE_PASSWORD: postgres

services:
  db-anime:
    image: postgres
    container_name: postgres_anime_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db_anime
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/postgresql/data
    mem_limit: 512m

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - "./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml"#copia de ./src... para etc/prometheus/com o nome de arquivo prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml" #localização do arquivo de configuração
    ports:
      - "9090:9090" #porta do prometheus conf. em prometheus.yml by default is 9090
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    mem_limit: 128m

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    mem_limit: 128m

  springboot-essentials-app:
    #image: registry.hub.docker.com/uandersonferreira/springboot-essentials-update:0.0.1-SNAPSHOT
    image: uandersonferreira/springboot-essentials-update:0.0.1-SNAPSHOT #Após enviar para o docker hub têm que retirar o registry.hub.docker.com
    ports:
      - "8080:8080"
    environment:
      <<: *database-variables
    mem_limit: 512m

volumes:
  db_data:
